// Copyright (c) 2020 InfraCloud Technologies
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/*
 * Microsoft Bot Connector API - v3.0
 *
 * The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    Â© 2016 Microsoft
 *
 * API version: v3
 * Contact: botframework@microsoft.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package schema

// PaymentAddress - Address within a Payment Request
type PaymentAddress struct {

	// This is the CLDR (Common Locale Data Repository) region code. For example, US, GB, CN, or JP
	Country string `json:"country,omitempty"`

	// This is the most specific part of the address. It can include, for example, a street name, a house number, apartment number, a rural delivery route, descriptive instructions, or a post office box number.
	AddressLine []string `json:"addressLine,omitempty"`

	// This is the top level administrative subdivision of the country. For example, this can be a state, a province, an oblast, or a prefecture.
	Region string `json:"region,omitempty"`

	// This is the city/town portion of the address.
	City string `json:"city,omitempty"`

	// This is the dependent locality or sublocality within a city. For example, used for neighborhoods, boroughs, districts, or UK dependent localities.
	DependentLocality string `json:"dependentLocality,omitempty"`

	// This is the postal code or ZIP code, also known as PIN code in India.
	PostalCode string `json:"postalCode,omitempty"`

	// This is the sorting code as used in, for example, France.
	SortingCode string `json:"sortingCode,omitempty"`

	// This is the BCP-47 language code for the address. It's used to determine the field separators and the order of fields when formatting the address for display.
	LanguageCode string `json:"languageCode,omitempty"`

	// This is the organization, firm, company, or institution at this address.
	Organization string `json:"organization,omitempty"`

	// This is the name of the recipient or contact person.
	Recipient string `json:"recipient,omitempty"`

	// This is the phone number of the recipient or contact person.
	Phone string `json:"phone,omitempty"`
}
